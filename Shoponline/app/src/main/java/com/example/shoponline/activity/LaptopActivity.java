package com.example.shoponline.activity;import androidx.annotation.NonNull;import androidx.annotation.RequiresApi;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import android.content.Intent;import android.os.Build;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.util.Log;import android.view.LayoutInflater;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.AbsListView;import android.widget.AdapterView;import android.widget.ListView;import com.android.volley.AuthFailureError;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import com.example.shoponline.R;import com.example.shoponline.adapter.DienthoaiAdapter;import com.example.shoponline.adapter.Sanpham2Adapter;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import java.util.HashMap;import java.util.Map;public class LaptopActivity extends AppCompatActivity {    String url = "http://192.168.1.82:8080/server_android/getSP.php?page=";    androidx.appcompat.widget.Toolbar toolbarsp2;    ListView listViewsp2;    Sanpham2Adapter sanpham2Adapter;    ArrayList<sanpham> mangsp2;    int idsp2 = 0;    int page = 1;    View footerView;  //sử dụng layout processbar    boolean isLoading = false;    boolean limitData = false;    mHanlder mHanlder;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_laptop);        Anhxa();        GetIdLoaiSanPham();        ActionToolbarSp2();        GetDataSp2(page);        LoadmoreData();    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        getMenuInflater().inflate(R.menu.menu , menu);        return true;    }    @Override    public boolean onOptionsItemSelected(@NonNull MenuItem item) {        switch (item.getItemId()){            case R.id.menugiohang:                Intent intent =  new Intent(getApplicationContext(), GiohangActivity.class);                startActivity(intent);        }        return super.onOptionsItemSelected(item);    }    private void LoadmoreData() {        listViewsp2.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                Intent intent = new Intent(getApplicationContext(), Chitietsanpham.class);                intent.putExtra("thongtinsanpham", mangsp2.get(position));                startActivity(intent); //thực hiện chuyển màn hình            }        });        //gọi lại sự kiến kéo listview       listViewsp2.setOnScrollListener(new AbsListView.OnScrollListener() {            @Override            public void onScrollStateChanged(AbsListView view, int scrollState) {            }            @Override            public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {                //firstVisibleItem: view đầu tiên, visible.. các giá trị item có thể nhìn thấy, total tổng số item                //bắt vị trí cuối cùng trong listview                if(firstVisibleItem + visibleItemCount == totalItemCount && totalItemCount != 0 && isLoading == false && limitData ==  false)                {                    isLoading = true; //đang load sản phẩm                   ThreadData threadData = new ThreadData();                    threadData.start();                }            }        });    }    private void GetDataSp2(int Page) {        //đọc dữ liệu từ một đường dẫn        RequestQueue requestQueue = Volley.newRequestQueue(getApplicationContext());        String duongdan =  url+String.valueOf(Page);        StringRequest stringRequest = new StringRequest(Request.Method.POST, duongdan, new Response.Listener<String>() {            @Override            public void onResponse(String response) {                int id = 0;                String tenSp2 = "";                int giaSp2 = 0;                String HinhanhSp2= "";                String Mota = "";                int idsanpham = 0;                if(response != null && response.length() != 2) {                   listViewsp2.removeFooterView(footerView);                    try {                        JSONArray jsonArray = new JSONArray(response);                        for (int i = 0; i < jsonArray.length(); i++) {                            JSONObject jsonObject = jsonArray.getJSONObject(i);                            id = jsonObject.getInt("id");                            tenSp2 = jsonObject.getString("tensanpham");                            giaSp2= jsonObject.getInt("giasanpham");                            HinhanhSp2 = jsonObject.getString("hinhanhsanpham");                            Mota = jsonObject.getString("motasanpham");                            idsanpham = jsonObject.getInt("idloaisanpham");                            mangsp2.add(new sanpham(id, tenSp2, giaSp2, HinhanhSp2, Mota, idsanpham));                           sanpham2Adapter.notifyDataSetChanged();                        }                    } catch (JSONException e) {                        e.printStackTrace();                    }                }                 else {                    // <  0 => reponse hết dữ liệu                    limitData = true;                    listViewsp2.removeFooterView(footerView);                }            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {            }        }){            @Override            protected Map<String, String> getParams() throws AuthFailureError {                HashMap<String,String> param = new HashMap<String, String>();                param.put("idloaisanpham",String.valueOf(idsp2));                return param;            }        };        requestQueue.add(stringRequest);    }    private void ActionToolbarSp2() {        setSupportActionBar(toolbarsp2);        getSupportActionBar().setDisplayHomeAsUpEnabled(true); //tạo nút home        toolbarsp2.setNavigationOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                finish();            }        });    }    private void GetIdLoaiSanPham() {       idsp2  = getIntent().getIntExtra("idloaisanpham", -1); //nếu k tìm thấy giá trị id trả về -1;       Log.d("idsanpham",idsp2+"");    }    private void Anhxa() {        toolbarsp2 = (Toolbar) findViewById(R.id.toolbarloaisanpham2);        listViewsp2 = (ListView) findViewById(R.id.Listviewsp2);        mangsp2 = new ArrayList<>();        //mangsp2.add(new sanpham(1, "laptop", 1000, "https://cdn.tgdd.vn/Products/Images/42/218355/samsung-galaxy-note-20-600x600-1-400x400.jpg", "vv", 2));        sanpham2Adapter = new Sanpham2Adapter(getApplicationContext(), mangsp2);        listViewsp2.setAdapter(sanpham2Adapter);        //gọi lại phương thức để gán layout        LayoutInflater inflater = (LayoutInflater) getSystemService(LAYOUT_INFLATER_SERVICE);        footerView = inflater.inflate(R.layout.progcessbar, null);        //-------------------------------------------------------         mHanlder = new mHanlder();    }    public class mHanlder extends Handler //phân bố công việc cho Thread    {        @Override        public void handleMessage(@NonNull Message msg) {            switch (msg.what)            {                case 0:                    listViewsp2.addFooterView(footerView);                    break;                case 1:                   GetDataSp2(++page);                    isLoading = false; //trả về trạng thái chưa load dữ liệu                    break;            }            super.handleMessage(msg);        }    }    public class ThreadData extends Thread //xử lí nhiều luồng    {        @Override        public void run() {            mHanlder.sendEmptyMessage(0);            try {                Thread.sleep(3000);            } catch (InterruptedException e) {                e.printStackTrace();            }            Message message = mHanlder.obtainMessage(1); //phương thức liên kết thread và hanlder            mHanlder.sendMessage(message);            super.run();        }    }}